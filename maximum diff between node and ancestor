/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find_from_all_node(TreeNode* root,int &ans,int old_val){
        if(root==NULL){
            return;
        }
        ans=max(abs(root->val-old_val),ans);
        find_from_all_node(root->left,ans,old_val);
        find_from_all_node(root->right,ans,old_val);
    }
    void inorder(TreeNode* root,int &ans){
        if(root==NULL){
            return;
        }
        find_from_all_node(root,ans,root->val);
        inorder(root->left,ans);
        inorder(root->right,ans);
    }
    int max_diff(TreeNode* root,int maxv,int minv){
        if(root==NULL){
            return maxv-minv;
        }
        maxv=max(maxv,root->val);
        minv=min(minv,root->val);
        return max(max_diff(root->left,maxv,minv),max_diff(root->right,maxv,minv));
    }
    int maxAncestorDiff(TreeNode* root) {
        // let's try using bruteforce
        // int ans=0;
        // inorder(root,ans);
        // return ans;
        return max_diff(root,INT_MIN ,INT_MAX);
    }
};
